CREATE DATABASE AUTOSOFTDB;
-- USE AUTOSOFTDB;

CREATE TABLE ROLES (
    ID_ROL INT IDENTITY(1,1) PRIMARY KEY,
    DESCRIPCION VARCHAR(10) NOT NULL
);

CREATE TABLE TIPO_PERSONAS (
    ID_TIPO_PERSONA INT IDENTITY(1,1) PRIMARY KEY,
    DESCRIPCION VARCHAR(15) NOT NULL
);

CREATE TABLE PERSONAS (
    ID_PERSONA INT IDENTITY(1,1) PRIMARY KEY,
    IDENTIFICACION INT NULL,
    NOMBRE VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(320) NOT NULL,
    TELEFONO BIGINT NOT NULL,
    ID_TIPO_PERSONA INT NOT NULL,
    CREATED_AT DATETIME DEFAULT SYSDATETIME(),
    FOREIGN KEY (ID_TIPO_PERSONA) REFERENCES TIPO_PERSONAS(ID_TIPO_PERSONA) 
);

CREATE TABLE VEHICULOS (
    ID_VEHICULO INT IDENTITY(1,1) PRIMARY KEY,
    ID_PERSONA INT NOT NULL,
    PLACA VARCHAR(50) NOT NULL,
    MARCA VARCHAR(50) NOT NULL,
    MODELO VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID_PERSONA) REFERENCES PERSONAS(ID_PERSONA)
);

CREATE TABLE USUARIOS (
    ID_USUARIO INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE VARCHAR(200) NOT NULL,
    EMAIL VARCHAR(320) NOT NULL,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    ESTADO BIT NOT NULL,
    ID_ROL INT NOT NULL,
    CREATED_AT DATETIME DEFAULT SYSDATETIME(),
    FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL)
);

CREATE TABLE SERVICIOS_ACTIVOS (
    ID_SERVICIO INT IDENTITY(1,1) PRIMARY KEY,
    ID_VEHICULO INT NOT NULL,
    FECHA_INICIO DATETIME NOT NULL,
    FECHA_FIN DATETIME NULL,
    ESTADO VARCHAR(12),
    DESCRIPCION VARCHAR(255) NOT NULL,
    FOREIGN KEY (ID_VEHICULO) REFERENCES VEHICULOS(ID_VEHICULO)
);

CREATE TABLE CITAS (
    ID_CITA INT IDENTITY(1,1) PRIMARY KEY,
    ID_PERSONA INT NOT NULL, -- FK
    ID_VEHICULO INT NOT NULL, -- FK
    FECHA_HORA DATETIME NOT NULL,
    MOTIVO VARCHAR(255),
    CREATED_AT DATETIME DEFAULT SYSDATETIME(),
    FOREIGN KEY (ID_PERSONA) REFERENCES PERSONAS(ID_PERSONA),
    FOREIGN KEY (ID_VEHICULO) REFERENCES VEHICULOS(ID_VEHICULO)
);

CREATE TABLE FACTURA (
    ID_FACTURA INT IDENTITY(1,1) PRIMARY KEY,
    ID_PERSONA INT NOT NULL,
    DESCRIPCION VARCHAR(255) NOT NULL,
    FECHA DATETIME DEFAULT SYSDATETIME(),
    TOTAL DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (ID_PERSONA) REFERENCES PERSONAS(ID_PERSONA)
);


/******** STORED PROCEDURES ********/

/**** USUARIOS ****/

-- REGISTRO USUARIO
CREATE PROCEDURE REGISTRAR_USUARIO
    @Nombre             VARCHAR(200),
    @Email              VARCHAR(320),
    @Password_Hash      VARCHAR(255),
    @Id_Rol             INT
AS
BEGIN
    DECLARE @Estado BIT = 1
    IF NOT EXISTS (SELECT 1 FROM dbo.USUARIOS WHERE EMAIL = @Email)
    BEGIN
        INSERT INTO dbo.USUARIOS(NOMBRE, EMAIL, PASSWORD_HASH, ESTADO, ID_ROL)
        VALUES (@Nombre, @Email, @Password_Hash, @Estado, @Id_Rol)
    END
END;

-- ACTUALIZAR USUARIO
CREATE PROCEDURE ACTUALIZAR_USUARIO
    @ID_Usuario         INT,
    @Nombre             VARCHAR(200),
    @Email              VARCHAR(255),
    @Password_Hash      VARCHAR(255),
    @Id_Rol             INT
AS
BEGIN
    UPDATE USUARIOS
    SET 
        NOMBRE = @Nombre,
        EMAIL = @Email,
        PASSWORD_HASH = @Password_Hash
    WHERE ID_USUARIO = @ID_Usuario
END;

-- INACTIVAR USUARIO
CREATE PROCEDURE INACTIVAR_USUARIO
    @ID_Usuario INT
AS
BEGIN
    UPDATE USUARIOS
    SET Estado = 0
    WHERE ID_USUARIO = @ID_Usuario;
END;

-- OBTENER TODOS LOS USUARIOS
CREATE PROCEDURE OBTENER_USUARIOS
AS
BEGIN
    SELECT ID_USUARIO, NOMBRE, EMAIL, ESTADO, ID_ROL, CREATED_AT
	FROM USUARIOS
END;

-- OBTENER USUARIO
CREATE PROCEDURE OBTENER_USUARIO
    @ID_Usuario INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT ID_USUARIO, NOMBRE, EMAIL, ESTADO, ID_ROL, CREATED_AT
    FROM USUARIOS
    WHERE ID_USUARIO = @ID_Usuario;
END;



/**** PERSONAS ****/

-- REGISTRO PERSONA
CREATE PROCEDURE REGISTRAR_PERSONA
    @Identificacion     INT,
    @Nombre             VARCHAR(255),
    @Email              VARCHAR(320),
    @Telefono           BIGINT,
    @Id_Tipo_Persona    INT
AS
BEGIN
    INSERT INTO dbo.PERSONAS(IDENTIFICACION, NOMBRE, EMAIL, TELEFONO, ID_TIPO_PERSONA)
    VALUES (@Identificacion, @Nombre, @Email, @Telefono, @Id_Tipo_Persona)
END;

-- ACTUALIZAR PERSONA
CREATE PROCEDURE ACTUALIZAR_PERSONA
    @Id_Persona         INT,
    @Identificacion     INT,
    @Nombre             VARCHAR(255),
    @Email              VARCHAR(320),
    @Telefono           BIGINT,
    @Id_Tipo_Persona    INT
AS
BEGIN
    UPDATE PERSONAS
    SET 
        IDENTIFICACION = @Identificacion,
        NOMBRE = @Nombre,
        EMAIL = @Email,
        TELEFONO = @Telefono,
        ID_TIPO_PERSONA = @Id_Tipo_Persona
    WHERE ID_PERSONA = @Id_Persona
END;

-- OBTENER TODAS LAS PERSONAS
CREATE PROCEDURE OBTENER_PERSONAS
AS
BEGIN
    SELECT * FROM PERSONAS
END;

-- OBTENER PERSONA
CREATE PROCEDURE OBTENER_PERSONA
    @Id_Persona INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT * FROM PERSONAS
    WHERE ID_PERSONA = @Id_Persona;
END;